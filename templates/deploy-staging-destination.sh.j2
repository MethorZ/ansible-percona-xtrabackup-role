#!/bin/sh
##
# Ansible managed file - DO NOT EDIT!
#
# Preparation for servers:
# 1. Copy the staging backup ssh key to the database server: root@136.243.39.135:/home/staging-backup/.ssh/id_rsa_staging_backup /backup/mysql/
# 2. Deploy the branch and staging environment
# 3. Cronjob 0 10 * * 1 /home/staging-backup/deploy-staging.sh >> /home/staging-backup/deploy-staging.log 2>&1
#
##

##
# Deploy the staging environment
##

DESTINATION_SERVER_PATH="/home/staging-backup/branch-backup"
DESTINATION_SERVER_DUPLICATE="/home/staging-backup/staging-backup"

##
# Deploy branch setup
##
echo "Remove old branch backup"
rm -Rf /var/lib/mysql-branch-backup;

echo "Stopping mysql BRANCH service"
systemctl stop mysql-branch.service;

echo "Backing up current mysql BRANCH folder"
mv /var/lib/mysql-branch /var/lib/mysql-branch-backup;

echo "Copying BRANCH backup to destination"
mv ${DESTINATION_SERVER_PATH}/ /var/lib/mysql-branch;

echo "Applying user to mysql BRANCH folder"
chown -R mysql:mysql /var/lib/mysql-branch;

echo "Starting mysql BRANCH service"
systemctl start mysql-branch.service;

##
# Deploy branch setup
##
echo "Remove old staging backup"
rm -Rf /var/lib/mysql-staging-backup;

echo "Stopping mysql STAGING service"
systemctl stop mysql-staging.service;

echo "Backing up current mysql STAGING folder"
mv /var/lib/mysql-staging /var/lib/mysql-staging-backup;

echo "Copying STAGING backup to destination"
mv ${DESTINATION_SERVER_DUPLICATE}/ /var/lib/mysql-staging;

echo "Applying user to mysql STAGING folder"
chown -R mysql:mysql /var/lib/mysql-staging;

echo "Starting mysql STAGING service"
systemctl start mysql-staging.service;
